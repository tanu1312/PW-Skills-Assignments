
Loops are programming constructs that allow you to execute a block of code repeatedly as long as a specified condition is true. They are essential for automating repetitive tasks and iterating over collections of data such as arrays.

The primary types of loops in programming are:

for loop: It executes a block of code a specified number of times.

Syntax:

css code
for (initialization; condition; increment/decrement) {
    // block of code to be executed
}
Example:

javascript code
for (let i = 0; i < 5; i++) {
    console.log(i);
}
while loop: It executes a block of code as long as a specified condition is true.

Syntax:


javascript code
let i = 0;
while (i < 5) {
    console.log(i);
    i++;
}
do-while loop: It executes a block of code at least once, and then repeats the loop as long as a specified condition is true.

Syntax:



javascript code
let i = 0;
do {
    console.log(i);
    i++;
} while (i < 5);
for...in loop: It iterates over the properties of an object.

Syntax:

css code
for (variable in object) {
    // block of code to be executed
}
Example:

javascript code
const person = {name: "John", age: 30, city: "New York"};
for (let key in person) {
    console.log(`${key}: ${person[key]}`);
}
for...of loop: It iterates over the values of an iterable object (e.g., arrays, strings).

Syntax:

css code
for (variable of iterable) {
    // block of code to be executed
}
Example:

javascript code
const fruits = ["apple", "banana", "cherry"];
for (let fruit of fruits) {
    console.log(fruit);
}
These loops provide flexibility and efficiency in handling various types of tasks in programming, such as processing data, iterating over arrays, and implementing algorithms.